# @package _global_

# to execute this experiment run:
# python train.py -m hparams_search=optuna_{{ model_name}} experiment=hyper/{{ experiment_name }}/{{ model_name + "_" + datamodule_name }}.yaml

defaults:
  - override /datamodule: {{ datamodule_name }}.yaml
  - override /model: {{ model_name }}.yaml
  - override /callbacks: default.yaml
  - override /logger: null
  - override /trainer: experiment.yaml

name: "{{ model_name }}"
dataset: "{{ datamodule_name }}"


{%- if model_name == "mlp" or model_name == "autoencoderregressor" or model_name == "deterministicpredictor" or model_name == "probabilisticpredictor" %}
datamodule:
  use_unlabeled_dataloader: False
{%- elif model_name == "ssdkl" %}
datamodule:
  train_ssdkl: True
{%- endif %}

model:
{%- if model_name == "mlp" %}
  in_features: {{ features }}
{%- elif model_name == "autoencoder" %}
  enc_in_features: {{ features }}
  enc_out_features: {{ latent }}
  dec_in_features: {{ latent }}
  dec_out_features: {{ features }}
{%- elif model_name == "autoencoderregressor" %}
  {%- if datamodule_name == "blog" %}
  checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/autoencoder/blog/100/2022-04-08_17-40-50/checkpointing/iq9jorjc/checkpoints/epoch=32-step=26465.ckpt
  {%- elif datamodule_name == "ctslice" %}
  checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/autoencoder/ctslice/100/2022-04-08_17-49-57/checkpointing/25inpmm8/checkpoints/epoch=29-step=12299.ckpt
  {%- elif datamodule_name == "elevators" %}
  checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/autoencoder/elevators/100/2022-04-08_17-32-05/checkpointing/p0sbn8kf/checkpoints/epoch=37-step=9233.ckpt
  {%- elif datamodule_name == "parkinson" %}
  checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/autoencoder/parkinson/100/2022-04-08_17-31-40/checkpointing/1rf8laah/checkpoints/epoch=19-step=1499.ckpt
  {%- elif datamodule_name == "protein" %}
  checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/autoencoder/protein/100/2022-04-08_17-34-56/checkpointing/185k2vyr/checkpoints/epoch=24-step=17449.ckpt
  {%- elif datamodule_name == "skillcraft" %}
  checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/autoencoder/skillcraft/100/2022-04-08_17-31-11/checkpointing/xq3ju076/checkpoints/epoch=73-step=1331.ckpt
  {%- endif %}
  reg_in_features: {{ latent }}
{%- elif model_name == "vae"%}
  enc_in_features: {{ features }}
  enc_out_features: {{ latent }}
  dec_in_features: {{ latent }}
  dec_out_features: {{ features }}
{%- elif model_name == "deterministicpredictor" %}
  {%- if datamodule_name == "blog" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/blog/100/2022-04-08_17-48-01/checkpointing/2ns63c2m/checkpoints/epoch=42-step=34485.ckpt
  {%- elif datamodule_name == "ctslice" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/ctslice/100/2022-04-08_17-58-18/checkpointing/2gsvg4kk/checkpoints/epoch=54-step=45044.ckpt
  {%- elif datamodule_name == "elevators" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/elevators/100/2022-04-08_17-34-32/checkpointing/1pspu5cv/checkpoints/epoch=31-step=7775.ckpt
  {%- elif datamodule_name == "parkinson" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/parkinson/100/2022-04-08_17-32-40/checkpointing/2hfmsrjx/checkpoints/epoch=50-step=3824.ckpt
  {%- elif datamodule_name == "protein" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/protein/100/2022-04-08_17-37-46/checkpointing/1mqknrgr/checkpoints/epoch=35-step=25127.ckpt
  {%- elif datamodule_name == "skillcraft" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/skillcraft/100/2022-04-08_17-32-03/checkpointing/wkl5mith/checkpoints/epoch=48-step=881.ckpt
  {%- endif %}
  reg_in_features: {{ latent }}
{%- elif model_name == "probabilisticpredictor" %}
  {%- if datamodule_name == "blog" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/blog/100/2022-04-08_17-48-01/checkpointing/2ns63c2m/checkpoints/epoch=42-step=34485.ckpt
  {%- elif datamodule_name == "ctslice" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/ctslice/100/2022-04-08_17-58-18/checkpointing/2gsvg4kk/checkpoints/epoch=54-step=45044.ckpt
  {%- elif datamodule_name == "elevators" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/elevators/100/2022-04-08_17-34-32/checkpointing/1pspu5cv/checkpoints/epoch=31-step=7775.ckpt
  {%- elif datamodule_name == "parkinson" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/parkinson/100/2022-04-08_17-32-40/checkpointing/2hfmsrjx/checkpoints/epoch=50-step=3824.ckpt
  {%- elif datamodule_name == "protein" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/protein/100/2022-04-08_17-37-46/checkpointing/1mqknrgr/checkpoints/epoch=35-step=25127.ckpt
  {%- elif datamodule_name == "skillcraft" %}
  vae_checkpoint_path: ${original_work_dir}/logs/experiments/runs/checkpointing/vae/skillcraft/100/2022-04-08_17-32-03/checkpointing/wkl5mith/checkpoints/epoch=48-step=881.ckpt
  {%- endif %}
  reg_in_features: {{ latent }}
{%- elif model_name == "m2vae" %}
  enc_in_features: {{ add_1(features) }}
  enc_out_features: {{ latent }}
  dec_in_features: {{ add_1(latent) }}
  dec_out_features: {{ features }}
  reg_in_features: {{ features }}
{%- elif model_name == "srgan" %}
  gen_out_features: {{ features }}
  dis_in_features: {{ features }}
{%- elif model_name == "semigan" %}
  dis_x_in_features: {{ features }}
  dis_xy_in_features: {{ add_1(features) }}
  gen_x_out_features: {{ features }}
  inv_in_features: {{ features }}
  infer_in_features: {{ features }}
{%- elif model_name == "ssdkl" %}
  enc_in_features: {{ features }}
  enc_out_features: {{ latent }}
{%- endif %}

seed: 42

logger:
  wandb:
    name: ${name}/${dataset}/${now:%Y-%m-%d}/${now:%H-%M-%S}
    job_type: "hyperparameter_search"
    group: "{{ model_name + "_" + datamodule_name }}"
    tags: 
      - ${name}
      - "{{ datamodule_name }}"
      - "hyperparameter_search"
    notes: ""

hydra:
  sweep:
    dir: logs/experiments/multiruns/{{ experiment_name }}/${name}/${dataset}__${now:%Y-%m-%d}_${now:%H-%M-%S}
    subdir: ${hydra.job.num}